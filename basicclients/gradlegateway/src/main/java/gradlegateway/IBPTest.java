/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package gradlegateway;
import java.io.IOException;
import java.io.StringReader;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.Files;

import org.hyperledger.fabric.gateway.*;
import org.hyperledger.fabric.gateway.Wallet.Identity;


public class IBPTest {
	public static void main(String[] args) throws IOException, ContractException {
		final String basePath = "/home/dave/testibp";
		Path walletLoc = Paths.get(basePath, "ibp_wallet");
		Wallet wallet = Wallet.createFileSystemWallet(walletLoc);
		
		String certificate = new String(Files.readAllBytes(Paths.get(basePath, "cert.pem")));
		String privateKey = new String(Files.readAllBytes(Paths.get(basePath, "key.pem")));

		Identity id = org.hyperledger.fabric.gateway.Wallet.Identity.createIdentity("DavesMSP", new StringReader(certificate), new StringReader(privateKey));
		wallet.put("dave", id);
		
		Path ccpLoc = Paths.get(basePath, "daveschannel_mycc_profile.json");
		
		Gateway.Builder builder = Gateway.createBuilder();
		builder.discovery(true).networkConfig(ccpLoc).identity(wallet, "dave");
		try (Gateway gateway = builder.connect()) {
			
			Network network = gateway.getNetwork("daveschannel");
			Contract contract = network.getContract("mycc");
			contract.evaluateTransaction("instantiate", "dave", "joy");
		}
		// Gateways are AutoCloseable when used in a try with resources block
		// Alternatively you can do Gateway.close()
	}
	
	
}
