---
  - name: Deploy blockchain infrastructure and smart contracts
    hosts: localhost
    vars:
      # Configuration for the target infrastructure.
      infrastructure:
        # Type of target infrastructure. The options are:
        # - "docker" deploy using Docker
        # - "saas" deploy using the IBM Blockchain Platform on IBM Cloud
        # - "software" deploy using the IBM Blockchain Platform software
        type: docker
        # Docker specific configuration.
        docker:
          # The name of the Docker network to use for all containers.
          network: hub_default
          labels:
            dave_network: dave_network_label
      # The list of organizations.
      organizations:
        # The organization Org1.
        - &OrgA
          # MSP configuration for this organization.
          msp:
            # The unique ID of this MSP.
            id: "orgaMSP"
            # The admin identity and secret to register and enroll for this MSP.
            # This user will be registered on the CA specified for this organization,
            # and used as the administrator for the MSP, and any peers or orderers
            # that belong to this organization.
            admin:
              identity: "orga"
              secret: "orgAAdminpw"
          # CA configuration for this organization.
          ca: &OrgACA
            # The unique ID of this CA.
            id: "orgaCA"
            # The default admin identity and secret to set for this CA.
            admin_identity: "admin"
            admin_secret: "adminpw"
            # TLS configuration for this CA.
            tls:
              # Should TLS be enabled for this CA?
              enabled: false
            # Docker specific configuration.
            docker:
              # The name to use for this Docker container and associated Docker volumes.
              name: ca.orga.example.com
              # The hostname to use for this Docker container.
              hostname: ca.orga.example.com
              # The external port to use for this Docker container.
              port: 18050
          # The list of peers for this organization.
          peers:
            # First peer for this organization.
            - &OrgAPeer1
              # The unique ID of this peer.
              id: "orgaPeer1"
              # The identity and secret to register and enroll for this peer.
              # This user will be registered on the CA specified for this organization,
              # and will be used as the peers identity.
              identity: "orgapeer1"
              secret: "orgapeer1pw"
              # The database type to use to store this peers world state and private data
              # collections. The options are:
              # - "couchdb" use Apache CouchDB
              # - "leveldb" use LevelDB
              database_type: couchdb
              # TLS configuration for this peer.
              tls:
                # Should TLS be enabled for this peer?
                enabled: false
                # The TLS identity and secret to register and enroll for this peer.
                # This user will be registered on the CA specified for this organization,
                # and will be used as the peers TLS identity.
                identity: "orgapeer1tls"
                secret: "orgapeer1tlspw"
              # Docker specific configuration.
              docker:
                # The name to use for this Docker container and associated Docker volumes.
                name: peer0.orga.example.com
                # The hostname to use for this Docker container.
                hostname: peer0.orga.example.com
                # The external request port to use for this Docker container.
                port: 18051
                # The prefix to use for naming all chaincode Docker images and containers.
                chaincode_name_prefix: wt
                # The external chaincode port to use for this Docker container.
                chaincode_port: 18052
                # The external operations port to use for this Docker container.
                operations_port: 18053
                # CouchDB specific configuration.
                couchdb:
                  # The name to use for the CouchDB Docker container and associated Docker volumes.
                  name: couchdb0.orga.example.com
                  # The hostname to use for the CouchDB Docker container.
                  hostname: couchdb0.orga.example.com
                  # The external CouchDB port to use for the CouchDB Docker container.
                  port: 18054
          # The directory to store generated JSON files for each CA, peer, and orderer in this organization.
          nodes: "{{ playbook_dir }}/nodes/orga"
          # The directory to store all identities (certificate and private key pairs) for this organization.
          wallet: "{{ playbook_dir }}/wallet/orga"
          # The directory to store all gateways for this organization.
          gateways: "{{ playbook_dir }}/gateways/orga"
        - &OrgB
          # MSP configuration for this organization.
          msp:
            # The unique ID of this MSP.
            id: "orgbMSP"
            # The admin identity and secret to register and enroll for this MSP.
            # This user will be registered on the CA specified for this organization,
            # and used as the administrator for the MSP, and any peers or orderers
            # that belong to this organization.
            admin:
              identity: "orgb"
              secret: "orgBAdminpw"
          # CA configuration for this organization.
          ca: &OrgBCA
            # The unique ID of this CA.
            id: "orgbCA"
            # The default admin identity and secret to set for this CA.
            admin_identity: "admin"
            admin_secret: "adminpw"
            # TLS configuration for this CA.
            tls:
              # Should TLS be enabled for this CA?
              enabled: false
            # Docker specific configuration.
            docker:
              # The name to use for this Docker container and associated Docker volumes.
              name: ca.orgb.example.com
              # The hostname to use for this Docker container.
              hostname: ca.orgb.example.com
              # The external port to use for this Docker container.
              port: 19050
          # The list of peers for this organization.
          peers:
            # First peer for this organization.
            - &OrgBPeer1
              # The unique ID of this peer.
              id: "orgbPeer1"
              # The identity and secret to register and enroll for this peer.
              # This user will be registered on the CA specified for this organization,
              # and will be used as the peers identity.
              identity: "orgbpeer1"
              secret: "orgbpeer1pw"
              # The database type to use to store this peers world state and private data
              # collections. The options are:
              # - "couchdb" use Apache CouchDB
              # - "leveldb" use LevelDB
              database_type: couchdb
              # TLS configuration for this peer.
              tls:
                # Should TLS be enabled for this peer?
                enabled: false
                # The TLS identity and secret to register and enroll for this peer.
                # This user will be registered on the CA specified for this organization,
                # and will be used as the peers TLS identity.
                identity: "orgbpeer1tls"
                secret: "orgbpeer1tlspw"
              # Docker specific configuration.
              docker:
                # The name to use for this Docker container and associated Docker volumes.
                name: peer0.orgb.example.com
                # The hostname to use for this Docker container.
                hostname: peer0.orgb.example.com
                # The external request port to use for this Docker container.
                port: 19051
                # The prefix to use for naming all chaincode Docker images and containers.
                chaincode_name_prefix: wt
                # The external chaincode port to use for this Docker container.
                chaincode_port: 19052
                # The external operations port to use for this Docker container.
                operations_port: 19053
                # CouchDB specific configuration.
                couchdb:
                  # The name to use for the CouchDB Docker container and associated Docker volumes.
                  name: couchdb0.orgb.example.com
                  # The hostname to use for the CouchDB Docker container.
                  hostname: couchdb0.orgb.example.com
                  # The external CouchDB port to use for the CouchDB Docker container.
                  port: 19054
          # The directory to store generated JSON files for each CA, peer, and orderer in this organization.
          nodes: "{{ playbook_dir }}/nodes/orgb"
          # The directory to store all identities (certificate and private key pairs) for this organization.
          wallet: "{{ playbook_dir }}/wallet/orgb"
          # The directory to store all gateways for this organization.
          gateways: "{{ playbook_dir }}/gateways/orgb"
        # The organization that manages the ordering service.
        - &OrdererOrg
          # MSP configuration for this organization.
          msp:
            # The unique ID of this MSP.
            id: "ordererMSP"
            # The admin identity and secret to register and enroll for this MSP.
            # This user will be registered on the CA specified for this organization,
            # and used as the administrator for the MSP, and any peers or orderers
            # that belong to this organization.
            admin:
              identity: "ordererAdmin"
              secret: "ordererAdminpw"
          # CA configuration for this organization.
          ca: &OrdererCA
            # The unique ID of this CA.
            id: "ordererCA"
            # The default admin identity and secret to set for this CA.
            admin_identity: "admin"
            admin_secret: "adminpw"
            # TLS configuration for this CA.
            tls:
              # Should TLS be enabled for this CA?
              enabled: false
            # Docker specific configuration.
            docker:
              # The name to use for this Docker container and associated Docker volumes.
              name: ca.orderer.example.com
              # The hostname to use for this Docker container.
              hostname: ca.orderer.example.com
              # The external port to use for this Docker container.
              port: 17050
            # IBM Blockchain Platform on IBM Cloud specific configuration.
          # Orderer configuration for this organization.
          orderer: &Orderer
            # The unique ID of this orderer.
            id: "orderer1"
            # The identity and secret to register and enroll for this orderer.
            # This user will be registered on the CA specified for this organization,
            # and will be used as the orderers identity.
            identity: "orderer1"
            secret: "orderer1pw"
            # TLS configuration for this orderer.
            tls:
              # Should TLS be enabled for this orderer?
              enabled: false
              # The TLS identity and secret to register and enroll for this orderer.
              # This user will be registered on the CA specified for this organization,
              # and will be used as the orderers TLS identity.
              identity: "orderer1tls"
              secret: "orderer1tlspw"
            # Consortium configuration for this orderer.
            consortium:
              # The list of consortium members.
              members:
                # Reference to the organization Org1.
                - *OrgA
                - *OrgB
            # Block cutting configuration for this orderer.
            block_configuration:
              # The absolute maximum size of a block in bytes.
              # absolute_max_bytes: 10485760
              # The maximum number of messages in a block.
              # max_message_count: 500
              # The preferred maximum size of a block in bytes.
              # preferred_max_bytes: 2097152.
              # The maximum time to wait before cutting a new block.
              timeout: 10ms
            # Docker specific configuration.
            docker:
              # The name to use for this Docker container and associated Docker volumes.
              name: orderer.example.com
              # The hostname to use for this Docker container.
              hostname: orderer.example.com
              # The external port to use for this Docker container.
              port: 17051
              # The external operations port to use for this Docker container.
              operations_port: 17052
              # The cluster name of this orderer.
              cluster_name: "OrdererCluster"
          # The directory to store generated JSON files for each CA, peer, and orderer in this organization.
          nodes: "{{ playbook_dir }}/nodes/orderer"
          # The directory to store all identities (certificate and private key pairs) for this organization.
          wallet: "{{ playbook_dir }}/wallet/orderer"
          # The directory to store all gateways for this organization.
          gateways: "{{ playbook_dir }}/gateways/orderer"
      # The list of channels.
      channels:
        - &daveChannel
          # The name of the channel.
          name: dave
          # The orderer to use for this channel.
          orderer: *Orderer
          # The list of channel members.
          members:
            # Reference to the organization OrgA.
            - <<: *OrgA
              # The list of committing peers for this organization.
              committing_peers:
                # Reference to the first peer for this organization.
                - *OrgAPeer1
              # The list of anchor peers for this organization.
              anchor_peers:
                # Reference to the first peer for this organization.
                - *OrgAPeer1
            - <<: *OrgB
              # The list of committing peers for this organization.
              committing_peers:
                # Reference to the first peer for this organization.
                - *OrgBPeer1
              # The list of anchor peers for this organization.
              anchor_peers:
                # Reference to the first peer for this organization.
                - *OrgBPeer1
      # The list of contracts.
      contracts:
        - &davenetwork
          # The name of the contract.
          name: dave-network
          # The version of the contract.
          version: "{{ lookup('env', 'CONTRACT_VERSION') }}"
          # The path to the file containing the packaged contract. This file can be created
          # using the "peer chaincode package" command, one of the Fabric SDKs, or the IBM
          # Blockchain Platform extension for Visual Studio Code.
          package: "{{ playbook_dir }}/contracts/dave-network@{{ lookup('env', 'CONTRACT_VERSION') }}.cds"
          # The list of channels to deploy this contract into.
          channels:
            # Reference to the channel channel1.
            - <<: *daveChannel
              #PDCs for contract
              collections_config: "{{ playbook_dir }}/collection-config.json"
              # The endorsement policy for this contract on this channel.
              endorsement_policy: "AND('orgaMSP.member', 'orgbMSP.member')"
              # The list of endorsing members for this contract on this channel.
              endorsing_members:
                # Reference to the organization Org1.
                - <<: *OrgA
                  # The list of endorsing peers for this organization.
                  endorsing_peers:
                    # Reference to the first peer for this organization.
                    - <<: *OrgAPeer1
                - <<: *OrgB
                  endorsing_peers:
                    # Reference to the first peer for this organization.
                    - <<: *OrgBPeer1
      # The list of gateways.
      gateways:
        # The gateway gateway1.
        - name: gateway1
          # The organization that owns the gateway.
          organization:
            # Reference to the organization OrgA.
            <<: *OrgA
            # The list of gateway peers for this organization.
            gateway_peers:
              # Reference to the first peer for this organization.
              - *OrgAPeer1
        - name: gateway2
          # The organization that owns the gateway.
          organization:
            # Reference to the organization OrgB.
            <<: *OrgB
            # The list of gateway peers for this organization.
            gateway_peers:
              # Reference to the first peer for this organization.
              - *OrgBPeer1
    roles:
      - ibm.blockchain_platform_manager
